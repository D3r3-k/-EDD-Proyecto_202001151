digraph G {   
    subgraph cluster_block1 {
        label="Bloque #1"
        style=rounded;
        color=black;
        edge [style=invis];

        timestamp1 [label="Timestamp: \n26-10-2024 13:24"; shape=box; style=rounded];
        nonce1 [label="Nonce: \n0"; shape=box; style=rounded];
        timestamp1 -> nonce1 -> root1
        subgraph cluster_header1 {
            label="Header"
            style=rounded;

            root1 [label="RootHash: \n000080be5977c9cf9074d5cef9edb07b1b0cd02a6b4e467ceb3aa2e106da4011"; shape=box; style=rounded];
            proof1 [label="Hash: \n000080be5977c9cf9074d5cef9edb07b1b0cd02a6b4e467ceb3aa2e106da4011"; shape=box; style=rounded];
            hash1 [label="PrevHash: \n0000"; shape=box; style=rounded];

            root1 -> proof1
            proof1 -> hash1
        }
        trans4 [label="contenido del archivo json \ndsadasdsadsa"; shape=box; style=rounded];

        // el subgrafo cluster_header1 se conecta con las transacciones
        hash1 -> trans4
    }

    subgraph cluster_block2 {
        label="Bloque #2"
        style=rounded;
        color=black;
        edge [style=invis];
        
        timestamp2 [label="Timestamp: \n26-10-2024 13:24"; shape=box; style=rounded];
        nonce2 [label="Nonce: \n0"; shape=box; style=rounded];
        timestamp2 -> nonce2 -> root2
        subgraph cluster_header2 {
            label="Header"
            style=rounded;

            root2 [label="RootHash: \n000024935166fe887b339e0f6f8bab5b7562da10718bb075cc0f04765b1ec750"; shape=box; style=rounded];
            proof2 [label="Hash: \n000024935166fe887b339e0f6f8bab5b7562da10718bb075cc0f04765b1ec750"; shape=box; style=rounded];
            hash2 [label="PrevHash: \n000080be5977c9cf9074d5cef9edb07b1b0cd02a6b4e467ceb3aa2e106da4011"; shape=box; style=rounded];

            root2 -> proof2
            proof2 -> hash2
        }

        // Transacciones dentro del bloque 3
        trans9 [label="{{correo@gmail.com|fecha y hora}|{comentarios | 5}|contenido}"; shape=record; style=rounded];

        hash2 -> trans9
    }

    // conectar bloque1 con hash2, pero sin afectar el diseÃ±o
    root1 -> hash2 [constraint=false;];    
}
